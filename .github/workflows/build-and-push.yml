name: ci

############################################################
# 1 ‚ñ∏ Triggers
############################################################
on:
  push:
    branches: [main]
    paths: ['services/**']
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '2 10 * * *'

############################################################
# 2 ‚ñ∏ Permissions and policy
############################################################
permissions:
  contents: read
  packages: write
  id-token: write

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}
  IMAGE_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
  MAVEN_OPTS: >-
      -Dmaven.repo.local=$HOME/.m2/repository
      -Dmaven.artifact.threads=8
      -Dorg.slf4j.simpleLogger.showDateTime=true

############################################################
# 3 ‚ñ∏ Job ‚Äúbuild‚Äù
############################################################
jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-${{ github.ref }}-${{ matrix.service }}
      cancel-in-progress: true

    strategy:
      matrix:
        service:
          - game-service

    steps:
      #-------------------------------------------------------
      # 3.1 Checkout & cach√©s
      #-------------------------------------------------------
      - name: üì• Checkout
        uses: actions/checkout@v4
        with: {fetch-depth: 0}

      - name: üíæ Cache Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-

      - name: üèóÔ∏è Set up Temurin 21
        uses: actions/setup-java@v4
        with: {distribution: temurin, java-version: 21}

      #-------------------------------------------------------
      # 3.2 Build + Unit Tests
      #-------------------------------------------------------
      - name: üß™ Build & verify
        run: mvn -f services/${{ matrix.service }}/pom.xml --batch-mode verify -Dmaven.test.failure.ignore=false

      #-------------------------------------------------------
      # 3.3 Sonar + Quality Gate
      #-------------------------------------------------------
      - name: üîé SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        with:
          projectBaseDir: services/${{ matrix.service }}
          args: >
            -Dsonar.projectKey=videogame-platform-${{ matrix.service }}
            -Dsonar.tests=src/test/java,src/it/java,src/integrationTest/java
            -Dsonar.coverage.exclusions=**/*Test.java,**/*IT.java
        env:
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: ‚úÖ SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1
        env:
          SONAR_TOKEN:    ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      #-------------------------------------------------------
      # 3.4 Container build, push, SBOM, firma
      #-------------------------------------------------------
      - name: üê≥ Set up Buildx
        uses: docker/setup-buildx-action@v3.10.0
        with: {version: latest}

      - name: üîê Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üì¶ Build & push image
        id: buildx
        uses: docker/build-push-action@v6
        with:
          context: services/${{ matrix.service }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: üìù Generate SBOM (Syft)
        uses: anchore/sbom-action@v0.15.3
        with:
          image: ${{ steps.buildx.outputs.digest }}
          format: cyclonedx-json
          output-file: sbom-${{ matrix.service }}.json

      - name: üì§ Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.service }}
          path: sbom-${{ matrix.service }}.json
          retention-days: 7

      - name: üîí Cosign sign (keyless)
        uses: sigstore/cosign-installer@v3
      - run: cosign sign --yes $IMAGE_NAME@${{ steps.buildx.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: "true"

      - name: üõ°Ô∏è Trivy image scan
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          severity: CRITICAL,HIGH
          exit-code: 1